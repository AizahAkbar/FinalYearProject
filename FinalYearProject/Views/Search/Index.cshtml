@model IEnumerable<FinalYearProject.ViewModels.BakeFrontEnd>

@{
    ViewData["Title"] = "Search Products";
}

<head>
    <link rel="stylesheet" href="~/css/search.css" />
</head>

<div class="search-container">
    <div class="search-header">
        @{
            if (!string.IsNullOrEmpty(Context.Request.Query["category"]))
            {
                <h1>@Context.Request.Query["category"]</h1>
            }
            if (!string.IsNullOrEmpty(Context.Request.Query["query"]))
            {
                <h2>Showing results for "@Context.Request.Query["query"]"</h2>
            }
        }
        <div class="sort-options">
            @{
                var queryParams = new Dictionary<string, string>();
                if (!string.IsNullOrEmpty(Context.Request.Query["category"]))
                    queryParams["category"] = Context.Request.Query["category"];
                if (!string.IsNullOrEmpty(Context.Request.Query["query"]))
                    queryParams["query"] = Context.Request.Query["query"];
                
                var currentSort = Context.Request.Query["sortBy"];
                var currentSortText = currentSort.ToString() switch
                {
                    "price_asc" => "Price (Low to High)",
                    "price_desc" => "Price (High to Low)",
                    "name" => "Sort Alphabetically",
                    _ => "Sort By"
                };
            }
            <div class="dropdown">
                <button class="btn dropdown-toggle sort-dropdown" type="button" id="sortDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                    @currentSortText
                </button>
                <ul class="dropdown-menu" aria-labelledby="sortDropdown">
                    <li><a class="dropdown-item @(currentSort == "price_asc" ? "active" : "")" 
                          href="@($"?{string.Join("&", queryParams.Select(kv => $"{kv.Key}={kv.Value}"))}&sortBy=price_asc")">Price (Low to High)</a></li>
                    <li><a class="dropdown-item @(currentSort == "price_desc" ? "active" : "")" 
                          href="@($"?{string.Join("&", queryParams.Select(kv => $"{kv.Key}={kv.Value}"))}&sortBy=price_desc")">Price (High to Low)</a></li>
                    <li><a class="dropdown-item @(currentSort == "name" ? "active" : "")" 
                          href="@($"?{string.Join("&", queryParams.Select(kv => $"{kv.Key}={kv.Value}"))}&sortBy=name")">Sort Alphabetically</a></li>
                </ul>
            </div>
        </div>
    </div>
    <div class="bakes-grid">
        @foreach (var item in Model)
        {
            <a asp-controller="Bakes" asp-action="Details" asp-route-id="@item.Id" class="bake-card">
                <img src="~/images/@(item.Name).jpg" alt="@item.AltText" class="bake-image" />
                <div class="bake-card-content">
                    <h3 class="bake-name">
                        @Html.DisplayFor(modelItem => item.Name)
                    </h3>
                    <p class="bake-price">£@item.Price.ToString("F2")</p>
                </div>
            </a>
        }
    </div>
</div>