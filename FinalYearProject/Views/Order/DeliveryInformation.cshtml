@model FinalYearProject.ViewModels.DeliveryInformationViewModel
@{
    ViewData["Title"] = "Delivery Information";
}

<head>
    <link rel="stylesheet" href="~/css/deliveryInformation.css" asp-append-version="true" />
</head>

<div class="container mt-4">
    <h1>Delivery Information</h1>

    <div class="row">
        <div class="col-md-8">
            <form method="post" asp-action="ProcessDeliveryInformation" id="deliveryForm">
                <div class="card mb-4">
                    <div class="card-header">
                        <h2 class="mb-0">Personal Information</h2>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label asp-for="FirstName" class="form-label">First Name</label>
                                <input asp-for="FirstName" class="form-control" required>
                                <span asp-validation-for="FirstName" class="text-danger"></span>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label asp-for="LastName" class="form-label">Last Name</label>
                                <input asp-for="LastName" class="form-control" required>
                                <span asp-validation-for="LastName" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="mb-3">
                            <label asp-for="PhoneNumber" class="form-label">Phone Number</label>
                            <input asp-for="PhoneNumber" class="form-control" required>
                            <span asp-validation-for="PhoneNumber" class="text-danger"></span>
                        </div>
                    </div>
                </div>

                <div class="card mb-4">
                    <div class="card-header">
                        <h2 class="mb-0">Delivery Address</h2>
                    </div>
                    <div class="card-body">
                        <div class="mb-3">
                            <label asp-for="Country" class="form-label">Country</label>
                            <select asp-for="Country" class="form-select" required>
                                <option value="">Select a country</option>
                                <option value="UK">United Kingdom</option>
                            </select>
                            <span asp-validation-for="Country" class="text-danger"></span>
                        </div>

                        <fieldset class="mb-3">
                            <legend class="form-label">Address Lookup</legend>
                            <div class="input-group">
                                <label for="postcode" class="visually-hidden">Postcode</label>
                                <input type="text" id="postcode" class="form-control" placeholder="Enter your postcode" aria-describedby="postcode-instructions">
                                <div id="postcode-instructions" class="sr-only">
                                    Enter your postcode, then tab to the Find Address button. Select it then tab to the select address dropdown. A list of addresses will show for your postcode. Use the up and down arrow keys to find your address.
                                </div>
                                <button type="button" class="btn btn-secondary find-address-button" onclick="lookupAddress()">Find Address</button>
                            </div>
                            <div id="address-select-container">
                                <label for="address-select" class="visually-hidden">Select an address</label>
                                <select id="address-select" class="form-select mt-2" style="display: none;">
                                    <option value="">Select an address...</option>
                                </select>
                            </div>
                        </fieldset>

                        <fieldset class="mb-3">
                            <legend class="form-label">Manual Address Entry</legend>
                            <label for="StreetAddress" class="visually-hidden">Address Line 1</label>
                            <input asp-for="StreetAddress" id="StreetAddress" class="form-control mb-2" placeholder="Address Line 1" required>
                            
                            <label for="addressLine2" class="visually-hidden">Address Line 2</label>
                            <input id="addressLine2" class="form-control mb-2" placeholder="Address Line 2">
                            
                            <label for="City" class="visually-hidden">City</label>
                            <input asp-for="City" id="City" class="form-control mb-2" placeholder="City" required>
                            
                            <label for="PostCode" class="visually-hidden">Postcode</label>
                            <input asp-for="PostCode" id="PostCode" class="form-control" placeholder="Postcode" required>
                        </fieldset>
                    </div>
                </div>

                <div class="card mb-4">
                    <div class="card-header">
                        <h2 class="mb-0">Delivery Options</h2>
                    </div>
                    <div class="card-body">
                        <fieldset>
                            <legend class="visually-hidden">Delivery Method Selection</legend>
                            <div class="form-check mb-3">
                                <input type="radio" class="form-check-input" name="deliveryMethod" id="standard" value="Standard" checked>
                                <label class="form-check-label" for="standard">
                                    <strong>Standard Delivery</strong> - £3.99<br>
                                    <small class="text-muted">3-5 working days</small>
                                </label>
                            </div>
                            <div class="form-check mb-3">
                                <input type="radio" class="form-check-input" name="deliveryMethod" id="express" value="Express">
                                <label class="form-check-label" for="express">
                                    <strong>Express Delivery</strong> - £6.99<br>
                                    <small class="text-muted">Next working day if ordered before 2pm</small>
                                </label>
                            </div>
                            <div class="form-check">
                                <input type="radio" class="form-check-input" name="deliveryMethod" id="preferred" value="Preferred">
                                <label class="form-check-label" for="preferred">
                                    <strong>Preferred Day Delivery</strong> - £4.99<br>
                                    <small class="text-muted">Choose your delivery date</small>
                                </label>
                            </div>
                        </fieldset>
                        <div class="mt-3" id="preferredDateContainer" style="display: none;">
                            <label for="preferredDeliveryDate" class="form-label">Select Preferred Date</label>
                            <input type="date" class="form-control" id="preferredDeliveryDate" name="preferredDeliveryDate">
                        </div>
                    </div>
                </div>

                <input type="hidden" name="basket" value="@Model.Basket" />

                <button type="submit" class="btn btn-primary btn-lg w-100 billing-button">Proceed to Billing</button>
            </form>
        </div>

        <div class="col-md-4">
            <div class="card">
                <div class="card-header">
                    <h2 class="mb-0">Order Summary</h2>
                </div>
                <div class="card-body">
                    <div id="orderItems">
                        @foreach (var bake in Model.Basket.Bakes)
                        {
                            <div class="d-flex justify-content-between mb-2">
                                <input type="hidden" name="bakeId" id="bakeId" value="@bake.Id" />
                                <span class="item-name">@bake.Name</span>
                                <span style="float: right">£@bake.TotalPrice.ToString("F2")</span>
                            </div>
                            <span>Quantity: @bake.Quantity</span>
                        }
                    </div>
                    <hr>
                    <div class="d-flex justify-content-between mb-2">
                        <span>Subtotal:</span>
                        <span id="subtotal">£@Model.Basket.Bakes.Sum(b => b.TotalPrice).ToString("F2")</span>
                    </div>
                    <div class="d-flex justify-content-between mb-2">
                        <span>Delivery:</span>
                        <span id="deliveryPrice">£3.99</span>
                    </div>
                    <div class="d-flex justify-content-between fw-bold">
                        <span>Total:</span>
                        <span id="total">£@((Model.Basket.Bakes.Sum(b => b.TotalPrice) + 3.99).ToString("F2"))</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Show/hide preferred date input based on delivery option selection
        document.querySelectorAll('input[name="deliveryMethod"]').forEach(radio => {
            radio.addEventListener('change', function() {
                const preferredDateContainer = document.getElementById('preferredDateContainer');
                const deliveryPrice = document.getElementById('deliveryPrice');

                if (this.value === 'preferred') {
                    preferredDateContainer.style.display = 'block';
                    deliveryPrice.textContent = '£4.99';
                } else {
                    preferredDateContainer.style.display = 'none';
                    deliveryPrice.textContent = this.value === 'express' ? '£6.99' : '£3.99';
                }
                updateTotal();
            });
        });

        // Function to update total price
        function updateTotal() {
            const subtotal = parseFloat(document.getElementById('subtotal').textContent.replace('£', ''));
            const delivery = parseFloat(document.getElementById('deliveryPrice').textContent.replace('£', ''));
            const total = subtotal + delivery;
            document.getElementById('total').textContent = `£${total.toFixed(2)}`;
        }

        // Function to lookup address using getAddress API
        async function lookupAddress() {
            const postcode = document.getElementById('postcode').value.trim();
            if (!postcode) {
                alert('Please enter a postcode');
                return;
            }

            const addressSelect = document.getElementById('address-select');
            const apiKey = 'zkk1K85ls0SG4LzOG_zohQ45948';
            const url = `https://api.getaddress.io/autocomplete/${encodeURIComponent(postcode)}?api-key=${apiKey}&all=true`;

            try {
                const response = await fetch(url);
                const data = await response.json();

                if (data.suggestions && data.suggestions.length > 0) {
                    // Clear existing options except the first one
                    addressSelect.innerHTML = '<option value="">Select an address...</option>';

                    // Add new options
                    data.suggestions.forEach(suggestion => {
                        const option = document.createElement('option');
                        option.value = suggestion.id;
                        option.textContent = suggestion.address;
                        addressSelect.appendChild(option);
                    });

                    // Show the select element
                    addressSelect.style.display = 'block';

                    // Handle address selection
                    addressSelect.onchange = async function() {
                        if (this.value) {
                            const selectedId = this.value;
                            const detailUrl = `https://api.getaddress.io/get/${selectedId}?api-key=${apiKey}`;

                            try {
                                const detailResponse = await fetch(detailUrl);
                                const addressDetail = await detailResponse.json();

                                // Get references to input elements first
                                const countrySelect = document.getElementById('Country');
                                const streetAddressInput = document.getElementById('StreetAddress');
                                const addressLine2Input = document.querySelector('input[placeholder="Address Line 2"]');
                                const cityInput = document.getElementById('City');
                                const postcodeInput = document.getElementById('PostCode');

                                // Set the country to UK since the API is UK-specific
                                if (countrySelect) {
                                    countrySelect.value = 'UK';
                                }

                                // Only set values if elements exist
                                if (streetAddressInput) streetAddressInput.value = addressDetail.formatted_address[0] || '';
                                if (addressLine2Input) addressLine2Input.value = addressDetail.formatted_address[1] || '';
                                if (cityInput) cityInput.value = addressDetail.town_or_city || '';
                                if (postcodeInput) postcodeInput.value = addressDetail.postcode || '';

                                } catch (error) {
                                    console.error('Error fetching address details:', error);
                                    alert('Error retrieving address details. Please try again or enter manually.');
                                }
                            }
                    };
                } else {
                    addressSelect.style.display = 'none';
                    alert('No addresses found for this postcode');
                }
            } catch (error) {
                console.error('Error fetching address:', error);
                addressSelect.style.display = 'none';
                alert('Error looking up address. Please try again or enter manually.');
            }
        }

        // Load order items and calculate total (to be implemented)
        function loadOrderSummary() {
            // Implement order summary loading logic here
        }

        // Load order summary when page loads
        document.addEventListener('DOMContentLoaded', loadOrderSummary);
    </script>
}